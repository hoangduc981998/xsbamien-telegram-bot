"""Error handler - X·ª≠ l√Ω l·ªói chung cho to√†n b·ªô bot"""

import logging
import traceback

from telegram import Update
from telegram.ext import ContextTypes

logger = logging.getLogger(__name__)


async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """X·ª≠ l√Ω l·ªói to√†n c·ª•c"""
    # Log l·ªói chi ti·∫øt
    logger.error(f"Exception while handling an update: {context.error}")

    # Log traceback ƒë·ªÉ debug
    tb_list = traceback.format_exception(
        None, context.error, context.error.__traceback__
    )
    tb_string = "".join(tb_list)
    logger.error(f"Traceback:\n{tb_string}")

    # Th√¥ng b√°o th√¢n thi·ªán cho user
    try:
        if update and update.effective_message:
            await update.effective_message.reply_text(
                "‚ùå <b>ƒê√£ x·∫£y ra l·ªói!</b>\n\n"
                "Vui l√≤ng th·ª≠ l·∫°i sau ho·∫∑c s·ª≠ d·ª•ng l·ªánh /start ƒë·ªÉ quay l·∫°i menu ch√≠nh.\n\n"
                "üí° N·∫øu l·ªói v·∫´n ti·∫øp t·ª•c, vui l√≤ng li√™n h·ªá admin.",
                parse_mode="HTML",
            )
    except Exception as e:
        logger.error(f"Error sending error message: {e}")
